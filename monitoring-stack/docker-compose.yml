services:
# ########## OpenSearch ##########
# OpenSearch is used for the cache status monitoring
# From the caching proxy node, all info is gathered and pushed as json to OS
  opensearch: # This is also the hostname of the container within the Docker network (i.e. https://opensearch/)
    image: opensearchproject/opensearch:latest # Specifying the latest available image - modify if you want a specific version
    container_name: opensearch
    environment:
      - cluster.name=opensearch-cluster # Name the cluster
      - node.name=opensearch # Name the node that will run in this container
      - discovery.seed_hosts=opensearch # Nodes to look for when discovering the cluster
      - cluster.initial_cluster_manager_nodes=opensearch # Nodes eligible to serve as cluster manager
      - bootstrap.memory_lock=true # Disable JVM heap memory swapping
      - "OPENSEARCH_JAVA_OPTS=-Xms512m -Xmx512m" # Set min and max JVM heap sizes to at least 50% of system RAM
      - OPENSEARCH_INITIAL_ADMIN_PASSWORD=${OPENSEARCH_INITIAL_ADMIN_PASSWORD}  # Sets the demo admin user password when using demo configuration, required for OpenSearch 2.12 and later
      - plugins.security.disabled=false
    ulimits:
      memlock:
        soft: -1 # Set memlock to unlimited (no soft or hard limit)
        hard: -1
      nofile:
        soft: 65536 # Maximum number of open files for the opensearch user - set to at least 65536
        hard: 65536
    volumes:
      - type: bind
        source: ./DB/OS
        target: /usr/share/opensearch/data # Creates volume called opensearch-data1 and mounts it to the container
    ports:
      - 9200:9200 # REST API
      - 9600:9600 # Performance Analyzer
    networks:
      monit-net:
        ipv4_address: 192.168.101.102

  opensearch-dashboards:
    image: opensearchproject/opensearch-dashboards:latest # Make sure the version of opensearch-dashboards matches the version of opensearch installed on other nodes
    container_name: opensearch-dashboards
    ports:
      - 5601:5601
    expose:
      - "5601" # Expose port 5601 for web access to OpenSearch Dashboards
    environment:
      OPENSEARCH_HOSTS: '["https://opensearch:9200"]' # Define the OpenSearch nodes that OpenSearch Dashboards will query
    networks:
       monit-net:
        ipv4_address: 192.168.101.103

# ########## InfluxDB ##########
# Influx is used for the xrootd summary monitoring
# and optionally, for the redirector and the ifnop I/O monit
  influxdb:
    container_name: influxdb
    image: influxdb:latest
    environment:
      DOCKER_INFLUXDB_INIT_MODE: setup
      DOCKER_INFLUXDB_INIT_USERNAME: ${DOCKER_INFLUXDB_INIT_USERNAME}
      DOCKER_INFLUXDB_INIT_PASSWORD: ${DOCKER_INFLUXDB_INIT_PASSWORD}
      DOCKER_INFLUXDB_INIT_ORG: ${DOCKER_INFLUXDB_INIT_ORG}
      DOCKER_INFLUXDB_INIT_BUCKET: ${DOCKER_INFLUXDB_INIT_BUCKET}
      DOCKER_INFLUXDB_INIT_ADMIN_TOKEN: ${DOCKER_INFLUXDB_INIT_ADMIN_TOKEN}
    volumes:
      - type: bind
        source: ./DB/influx/data
        target: /var/lib/influxdb2
    ports:
      - "8086:8086"
    networks:
      monit-net:
        ipv4_address: 192.168.101.104

  grafana:
    container_name: grafana
    image: grafana/grafana:latest
    environment:
      GF_SECURITY_ADMIN_PASSWORD: ${GF_SECURITY_ADMIN_PASSWORD}
    volumes:
      - type: bind
        source: ./logs
        target: /logs
    entrypoint: ["/bin/sh", "-c", "/run.sh &> /logs/grafana.log"] # with additional logging
    ports:
      - "3000:3000"
    networks:
      monit-net:
        ipv4_address: 192.168.101.105
    depends_on: 
      - influxdb

########## OPTIONAL ##########
# This container is used to run the script reading the xrd UPD stream and pushing to influx
  monit-cache:
    container_name: xrd-summary-monit
    image: rhofsaess/alma9_proxy_monit
    environment:
      INFLUXDB_URL: ${INFLUXDB_URL}
      INFLUXDB_ORG: ${INFLUXDB_ORG}
      INFLUXDB_BUCKET: ${INFLUXDB_BUCKET}
      INFLUXDB_TOKEN: ${INFLUXDB_TOKEN}
      MEASUREMENT: "HoreKa-cache"
      TAG_LIST: 'pgm, ver, src'
      DEBUG: 1
    volumes:
      - type: bind
        source: ./logs
        target: /logs
      - type: bind
        source: ./scripts
        target: /scripts
    entrypoint: /scripts/monit-cache.sh
    ports:
      - "9931:9931/udp"
    networks:
      monit-net:
        ipv4_address: 192.168.101.106

# Summary monitoring for gridka test redirector
# Analog: collecting UPD stream and pushing to influx
  monit-redirector:
    container_name: xrd-redirector-monit
    image: rhofsaess/alma9_proxy_monit
    environment:
      INFLUXDB_URL: ${INFLUXDB_URL}
      INFLUXDB_ORG: ${INFLUXDB_ORG}
      INFLUXDB_BUCKET: ${INFLUXDB_BUCKET}
      INFLUXDB_TOKEN: ${INFLUXDB_TOKEN}
      MEASUREMENT: "GridKa-Redirector"
      TAG_LIST: 'pgm, ver, src'
      DEBUG: 1
    volumes:
      - type: bind
        source: ./logs
        target: /logs
      - type: bind
        source: ./scripts
        target: /scripts
    entrypoint: /scripts/monit-redirector.sh
    ports:
      - "9930:9930/udp"
    networks:
      monit-net:
        ipv4_address: 192.168.101.107
 ##############################

networks:
  monit-net:
    driver: bridge
    ipam:
      config:
        - subnet: 192.168.101.0/24
          gateway: 192.168.101.1
