name: Rebuild Images For New XRootD Release

on:
  schedule:
    - cron: '0 0 * * 1' # Weekly check
  workflow_dispatch:

jobs:
  check-xrootd:
    runs-on: self-hosted

    steps:
      - name: Check out repository
        uses: actions/checkout@v3

      - name: Get latest XRootD version
        id: get-version
        run: |
          curl -s https://api.github.com/repos/xrootd/xrootd/releases/latest | jq -r '.tag_name' > latest_version.txt
          XROOTD_VERSION=$(cat latest_version.txt | sed 's/^v//')
          echo "Latest XRootD version is: $(cat latest_version.txt)"
          echo "XROOTD_VERSION=$(cat latest_version.txt | sed 's/^v//')" >> $GITHUB_ENV

      - name: Compare with current version
        id: compare-version
        run: |
          if [ -f current_version.txt ]; then
            if diff current_version.txt latest_version.txt > /dev/null; then
              echo "XRootD version is up to date: $(cat current_version.txt)"
              echo "UPDATE=False" >> $GITHUB_ENV
              exit 0
            else
              echo "New XRootD version available: $(cat latest_version.txt)"
              echo "UPDATE=True" >> $GITHUB_ENV
            fi
          else
            echo "No current version found. Latest version is: $(cat latest_version.txt)"
            echo "UPDATE=True" >> $GITHUB_ENV
          fi

      - name: Save the new version
        if: env.UPDATE == 'True'
        run: cp latest_version.txt current_version.txt

      - name: Build Docker Production Image
        if: env.UPDATE == 'True'
        run: |
          docker build \
            -f ./images/alma9/Dockerfile \
            --build-arg XROOTD_VERSION=${{ env.XROOTD_VERSION }} \
            -t rhofsaess/alma9_${{ env.XROOTD_VERSION }} .

      - name: Build Docker Development Image
        if: env.UPDATE == 'True'
        run: |
          docker build \
            -f ./images/alma9_dev/Dockerfile \
            --build-arg XROOTD_VERSION=${{ env.XROOTD_VERSION }} \
            -t rhofsaess/alma9_dev_${{ env.XROOTD_VERSION }} .


      - name: Log in to Docker Hub
        if: env.UPDATE == 'True'
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Push Docker Image
        if: steps.compare-version.outcome == 'failure'
        run: |
          docker push rhofsaess/alma9_${{ env.XROOTD_VERSION }}

